@page "/product-category/detail/{id:int}"
@using BlazorAdmin.ViewModels.ProductCategory;

<h1>Product category Detail</h1>
@if (productCategoryViewModel == null)
{
    <Loading />
}
else
{
    @using System.Linq
    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-10">
        <MudCard Style="height:100%;">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Earning Report</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent Class="px-0">
                <MudSimpleTable Elevation="0" Hover="true">
                    <MudGrid>
                        <MudItem xs="12" md="12">
                            <MudSelect T="string" Label="US States" HelperText="Pick your favorite states"
                                       MultiSelection="true" OffsetY="true"
                                       @bind-Value="value" @bind-SelectedValues="options" AdornmentIcon="@Icons.Material.Filled.Search"
                                       MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionText))">
                                @foreach (var item in Items)
                                {
                                    <MudSelectItem T="string" Value="@item.Id.ToString()">@item.Name</MudSelectItem>
                                }
                            </MudSelect>
                        </MudItem>
                        <MudItem xs="12" md="12">
                            <MudText Class="mb-n3" Typo="Typo.body2">
                                @foreach (var item in Items)
                                {
                                    if (options.Contains(item.Id.ToString()))
                                    {
                                        <MudChip Color="Color.Error" OnClose="Closed" Text="@item.Id.ToString()">@item.Name</MudChip>
                                    }
                                }
                            </MudText>
                        </MudItem>
                    </MudGrid>
                    <MudSwitch @bind-Checked="multiselectionTextChoice" Color="Color.Primary">MultiSelection Text choice</MudSwitch>
                </MudSimpleTable>


                <TabDynamic></TabDynamic>

                <Dialog></Dialog>

            </MudCardContent>
        </MudCard>
    </MudContainer>

    @code {
        private bool multiselectionTextChoice;
        private string value { get; set; } = "Nothing selected";
        private HashSet<string> options { get; set; } = new HashSet<string>();
        private List<ProductCategoryViewModel> Items { get; set; } = new List<ProductCategoryViewModel>();

        protected override void OnInitialized()
        {
            Items = new List<ProductCategoryViewModel>();
            for (int i = 0; i < 10; i++)
            {
                Items.Add(new ProductCategoryViewModel()
                {
                    Id = (i + 1),
                    Name = "Test " + (i + 1)
                });
            }
        }

        private string GetMultiSelectionText(List<string> selectedValues)
        {
            if (multiselectionTextChoice)
            {
                return $"Selected state{(selectedValues.Count > 1 ? "s" : "")}: {string.Join(", ", selectedValues.Select(x => x))}";
            }
            else
            {
                return $"{selectedValues.Count} state{(selectedValues.Count > 1 ? "s have" : " has")} been selected";
            }
        }

        private void Closed(MudChip chip)
        {
            options.Remove(chip.Text);
        }
    }
}